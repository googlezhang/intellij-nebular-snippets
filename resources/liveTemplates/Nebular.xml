<templateSet group="Nebular code snippets">
    <template name="nb-sidebar" value="&lt;nb-sidebar&gt;$SidebarContent$&lt;/nb-sidebar&gt;"
              description="NbSidebarComponent basic" toReformat="true" toShortenFQNames="true">
        <variable name="SidebarCont ent" expression="" defaultValue="" alwaysStopAt="true"/>
        <context>
            <option name="HTML" value="true"/>
        </context>
    </template>
    <template name="nb-layout"
              value="&lt;nb-layout&gt;&#10;    &lt;nb-layout-header&gt;$header$&lt;/nb-layout-header&gt;&#10;    &lt;nb-layout-column&gt;$content$&lt;/nb-layout-column&gt;&#10;    &lt;nb-layout-footer&gt;$footer$&lt;/nb-layout-footer&gt;&#10;&lt;/nb-layout&gt;"
              description="NbLayoutComponent basic" toReformat="true" toShortenFQNames="true">
        <variable name="header" expression="" defaultValue="" alwaysStopAt="true"/>
        <variable name="content" expression="" defaultValue="" alwaysStopAt="true"/>
        <variable name="footer" expression="" defaultValue="" alwaysStopAt="true"/>
        <context>
            <option name="HTML" value="true"/>
        </context>
    </template>
    <template name="nb-menu" value="&lt;nb-menu [items]=&quot;$items$&quot;&gt;&lt;/nb-menu&gt;"
              description="NbMenuComponent basic" toReformat="true" toShortenFQNames="true">
        <variable name="items" expression="" defaultValue="" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="true"/>
        </context>
    </template>
    <template name="nb-card"
              value="&lt;nb-card&gt;&#10;    &lt;nb-card-body&gt;&#10;        $Card$&#10;    &lt;/nb-card-body&gt;&#10;&lt;/nb-card&gt;"
              description="NbCardComponent basic" toReformat="true" toShortenFQNames="true">
        <variable name="Card" expression="" defaultValue="" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="true"/>
        </context>
    </template>
    <template name="nb-flip-card"
              value="&lt;nb-flip-card&gt;&#10;    &lt;nb-card-front&gt;&#10;        &lt;nb-card&gt;&#10;            &lt;nb-card-body&gt;&#10;                $Front_card_text$&#10;            &lt;/nb-card-body&gt;&#10;        &lt;/nb-card&gt;&#10;    &lt;/nb-card-front&gt;&#10;    &lt;nb-card-back&gt;&#10;        &lt;nb-card&gt;&#10;            &lt;nb-card-body&gt;&#10;                $Back_card_text$&#10;            &lt;/nb-card-body&gt;&#10;        &lt;/nb-card&gt;&#10;    &lt;/nb-card-back&gt;&#10;&lt;/nb-flip-card&gt;"
              description="NbFlipCardComponent basic with front and back cards" toReformat="true"
              toShortenFQNames="true">
        <variable name="Front_card_text" expression="spaceSeparated(&quot;Front-card-text&quot;)" defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="Back_card_text" expression="spaceSeparated(&quot;Back-card-text&quot;)"
                  defaultValue="Back card text" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="true"/>
        </context>
    </template>
    <template name="nb-reveal-card"
              value="&lt;nb-reveal-card&gt;&#10;    &lt;nb-card-front&gt;&#10;        &lt;nb-card&gt;&#10;            &lt;nb-card-body&gt;&#10;                $Front_card_text$&#10;            &lt;/nb-card-body&gt;&#10;        &lt;/nb-card&gt;&#10;    &lt;/nb-card-front&gt;&#10;    &lt;nb-card-back&gt;&#10;        &lt;nb-card&gt;&#10;            &lt;nb-card-body&gt;&#10;                $Back_card_text$&#10;            &lt;/nb-card-body&gt;&#10;        &lt;/nb-card&gt;&#10;    &lt;/nb-card-back&gt;&#10;&lt;/nb-reveal-card&gt;"
              description="NbRevealCardComponent basic with front and back cards" toReformat="true"
              toShortenFQNames="true">
        <variable name="Front_card_text" expression="spaceSeparated(&quot;Front-card-text&quot;)" defaultValue=""
                  alwaysStopAt="true"/>
        <variable name="Back_card_text" expression="spaceSeparated(&quot;Back-card-text&quot;)"
                  defaultValue="Back card text" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="true"/>
        </context>
    </template>
    <template name="nb-alert"
              value="&lt;nb-alert status=&quot;$primary$&quot; closable (close)=&quot;onClose()&quot;&gt;&#10;    $text$&#10;&lt;/nb-alert&gt;"
              description="NbAlertComponent basic with status and closeable"
              toReformat="true" toShortenFQNames="true">
        <variable name="primary"
                  expression="enum(&quot;primary&quot;,&quot;success&quot;,&quot;info&quot;,&quot;warning&quot;,&quot;danger&quot;)"
                  defaultValue="&quot;primary&quot;" alwaysStopAt="true"/>
        <variable name="text" expression="" defaultValue="&quot;Text&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="true"/>
        </context>
    </template>
    <template name="nb-search" value="&lt;nb-search type=&quot;$type$&quot;&gt;&lt;/nb-search&gt;"
              description="NbSearchComponent with animation types as options to select" toReformat="true"
              toShortenFQNames="true">
        <variable name="type"
                  expression="enum(&quot;rotate-layout&quot;,&quot;modal-move&quot;,&quot;curtain&quot;,&quot;column-curtain&quot;,&quot;modal-drop&quot;,&quot;modal-half&quot;)"
                  defaultValue="&quot;rotate-layout&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="true"/>
        </context>
    </template>
    <template name="nb-tabs"
              value="&lt;nb-tabset&gt;&#10;    &lt;nb-tab tabTitle=&quot;$tab1$&quot;&gt;&#10;        $tab1content$&#10;    &lt;/nb-tab&gt;&#10;    &lt;nb-tab tabTitle=&quot;$tab2$&quot;&gt;&#10;        $tab2content$&#10;    &lt;/nb-tab&gt;&#10;&lt;/nb-tabset&gt;"
              description="NbTabsetComponent with two tabs" toReformat="true" toShortenFQNames="true">
        <variable name="tab1" expression="" defaultValue="&quot;Tab 1 Title&quot;" alwaysStopAt="true"/>
        <variable name="tab1content" expression="" defaultValue="&quot;Tab 1 Content&quot;" alwaysStopAt="true"/>
        <variable name="tab2" expression="" defaultValue="&quot;Tab 2 Title&quot;" alwaysStopAt="true"/>
        <variable name="tab2content" expression="" defaultValue="&quot;Tab 2 Content&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="true"/>
        </context>
    </template>
    <template name="nb-stepper"
              value="&lt;nb-stepper orientation=&quot;$orientation$&quot;&gt;&#10;    &lt;nb-step label=&quot;$stepone$&quot;&gt;&#10;        $step1content$&#10;        &lt;nb-step&gt;&#10;            &lt;nb-step label=&quot;$steptwo$&quot;&gt;&#10;                $step2content$&#10;                &lt;nb-step&gt;&#10;&lt;/nb-stepper&gt;"
              description="NbStepperComponent with two steps" toReformat="true" toShortenFQNames="true">
        <variable name="orientation" expression="enum(&quot;horizontal&quot;,&quot;vertical&quot;)"
                  defaultValue="&quot;horizontal&quot;" alwaysStopAt="true"/>
        <variable name="stepone" expression="" defaultValue="&quot;Step One Label&quot;" alwaysStopAt="true"/>
        <variable name="step1content" expression="" defaultValue="&quot;Step 1 Content&quot;" alwaysStopAt="true"/>
        <variable name="steptwo" expression="" defaultValue="&quot;Step Two Label&quot;" alwaysStopAt="true"/>
        <variable name="step2content" expression="" defaultValue="&quot;Step 2 Content&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="true"/>
        </context>
    </template>
    <template name="nb-actions"
              value="&lt;nb-actions size=&quot;$size$&quot;&gt;&#10;    &lt;nb-action icon=&quot;$icon$&quot;&gt;&lt;/nb-action&gt;&#10;&lt;/nb-actions&gt;"
              toReformat="true" toShortenFQNames="true">
        <variable name="size" expression="enum(&quot;small&quot;,&quot;medium&quot;,&quot;large&quot;)"
                  defaultValue="&quot;medium&quot;" alwaysStopAt="true"/>
        <variable name="icon" expression="" defaultValue="&quot;nb-search&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="true"/>
        </context>
    </template>
    <template name="nb-action-icon" value="&lt;nb-action icon=&quot;$icon$&quot;&gt;&lt;/nb-action&gt;"
              description="NbActionsComponent action with icon" toReformat="true" toShortenFQNames="true">
        <variable name="icon" expression="" defaultValue="&quot;nb-search&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="true"/>
        </context>
    </template>
    <template name="nb-action-badge"
              value="&lt;nb-action icon=&quot;$icon$&quot;  badgeText=&quot;$count$&quot; badgeStatus=&quot;$status$&quot;&gt;&lt;/nb-action&gt;"
              description="NbActionsComponent action with badge and icon" toReformat="true" toShortenFQNames="true">
        <variable name="icon" expression="" defaultValue="&quot;nb-search&quot;" alwaysStopAt="true"/>
        <variable name="count" expression="" defaultValue="&quot;count&quot;" alwaysStopAt="true"/>
        <variable name="status"
                  expression="enum(&quot;primary&quot;,&quot;success&quot;,&quot;info&quot;,&quot;warning&quot;,&quot;danger&quot;)"
                  defaultValue="&quot;primary&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="true"/>
        </context>
    </template>
    <template name="nb-user"
              value="&lt;nb-user name=&quot;$name$&quot; size=&quot;$size$&quot; title=&quot;$title$&quot;&gt;&lt;/nb-user&gt;"
              description="NbUserComponent with size options" toReformat="true" toShortenFQNames="true">
        <variable name="name" expression="" defaultValue="&quot;User Name&quot;" alwaysStopAt="true"/>
        <variable name="size" expression="enum(&quot;small&quot;,&quot;medium&quot;,&quot;large&quot;)"
                  defaultValue="&quot;medium&quot;" alwaysStopAt="true"/>
        <variable name="title" expression="" defaultValue="&quot;Title&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="true"/>
        </context>
    </template>
    <template name="nb-checkbox" value="&lt;nb-checkbox status=&quot;$status$&quot;&gt;$text$&lt;/nb-checkbox&gt;"
              description="NbCheckboxComponent with status options" toReformat="true" toShortenFQNames="true">
        <variable name="status"
                  expression="enum(&quot;primary&quot;,&quot;success&quot;,&quot;info&quot;,&quot;warning&quot;,&quot;danger&quot;)"
                  defaultValue="" alwaysStopAt="true"/>
        <variable name="text" expression="" defaultValue="&quot;Text&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="true"/>
        </context>
    </template>
    <template name="nb-button" value="&lt;button nbButton&gt;$text$&lt;/button&gt;" description="Plain button"
              toReformat="true" toShortenFQNames="true">
        <variable name="text" expression="" defaultValue="&quot;Button Text&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="true"/>
        </context>
    </template>
    <template name="nb-spinner"
              value="[nbSpinner]=&quot;true&quot; nbSpinnerStatus=&quot;$status$&quot;  nbSpinnerSize=&quot;$size$&quot;"
              description="NbSpinnerDirective spinner directive with status and size" toReformat="true"
              toShortenFQNames="true">
        <variable name="status"
                  expression="enum(&quot;primary&quot;,&quot;success&quot;,&quot;info&quot;,&quot;warning&quot;,&quot;danger&quot;)"
                  defaultValue="&quot;primary&quot;" alwaysStopAt="true"/>
        <variable name="size" expression="enum(&quot;small&quot;,&quot;medium&quot;,&quot;large&quot;)"
                  defaultValue="&quot;medium&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="true"/>
        </context>
    </template>
    <template name="nb-progress" value="&lt;nb-progress-bar [value]=&quot;$value$&quot;&gt;&lt;/nb-progress-bar&gt;"
              description="NbProgressBarComponent basic" toReformat="true" toShortenFQNames="true">
        <variable name="value"
                  expression="enum(&quot;10&quot;,&quot;20&quot;,&quot;30&quot;,&quot;40&quot;,&quot;50&quot;,&quot;60&quot;,&quot;70&quot;,&quot;80&quot;,&quot;90&quot;)"
                  defaultValue="&quot;40&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="true"/>
        </context>
    </template>
    <template name="nb-progress-plus"
              value="&lt;nb-progress-bar [value]=&quot;$value$&quot; status=&quot;$status$&quot; size=&quot;$size$&quot; [displayValue]=&quot;true&quot;&gt;&lt;/nb-progress-bar&gt;"
              description="NbProgressBarComponent with status, size, displayValue" toReformat="true"
              toShortenFQNames="true">
        <variable name="value"
                  expression="enum(&quot;10&quot;,&quot;20&quot;,&quot;30&quot;,&quot;40&quot;,&quot;50&quot;,&quot;60&quot;,&quot;70&quot;,&quot;80&quot;,&quot;90&quot;)"
                  defaultValue="&quot;40&quot;" alwaysStopAt="true"/>
        <variable name="status"
                  expression="enum(&quot;primary&quot;,&quot;success&quot;,&quot;info&quot;,&quot;warning&quot;,&quot;danger&quot;)"
                  defaultValue="&quot;primary&quot;" alwaysStopAt="true"/>
        <variable name="size" expression="enum(&quot;xs&quot;,&quot;sm&quot;,&quot;lg&quot;,&quot;xlg&quot;)"
                  defaultValue="&quot;sm&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="true"/>
        </context>
    </template>
    <template name="nb-badge" value="&lt;nb-badge text=&quot;$badgeText$&quot;&gt;&lt;/nb-badge&gt;"
              description="NbBadgeComponent basic" toReformat="true" toShortenFQNames="true">
        <variable name="badgeText" expression="" defaultValue="&quot;Badge Text&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="true"/>
        </context>
    </template>
    <template name="nb-accordion" value="&lt;nb-accordion&gt;&#10;    $accordion$&#10;&lt;/nb-accordion&gt;"
              description="NbAccordionComponentaccordion" toReformat="true" toShortenFQNames="true">
        <variable name="accordion" expression="" defaultValue="" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="true"/>
        </context>
    </template>
    <template name="nb-accordion-item"
              value="&lt;nb-accordion-item&gt;&#10;    &lt;nb-accordion-item-header&gt;&#10;        $title$&#10;    &lt;/nb-accordion-item-header&gt;&#10;    &lt;nb-accordion-item-body&gt;&#10;        $content$&#10;    &lt;/nb-accordion-item-body&gt;&#10;&lt;/nb-accordion-item&gt;"
              description="NbAccordionComponent accordion item" toReformat="true" toShortenFQNames="true">
        <variable name="title" expression="" defaultValue="&quot;Title&quot;" alwaysStopAt="true"/>
        <variable name="content" expression="" defaultValue="&quot;Content&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="true"/>
        </context>
    </template>
    <template name="nb-list" value="&lt;nb-list&gt;&#10;    $content$&#10;&lt;/nb-list&gt;"
              description="NbListComponent basic list" toReformat="true" toShortenFQNames="true">
        <variable name="content" expression="" defaultValue="" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="true"/>
        </context>
    </template>
    <template name="nb-list-item" value="&lt;nb-list-item&gt;&#10;    $content$&#10;&lt;/nb-list-item&gt;"
              description="NbListComponent basic list item" toReformat="true" toShortenFQNames="true">
        <variable name="content" expression="" defaultValue="&quot;Content&quot;" alwaysStopAt="true"/>
        <context>
            <option name="HTML_TEXT" value="true"/>
        </context>
    </template>
</templateSet>